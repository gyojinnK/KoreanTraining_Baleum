plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.startup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.google.code.gson:gson:2.10.1'
}

tasks.named('test') {


	def webappDir = "$projectDir/src/main/front_end"

	sourceSets {
		main {
			resources {
				srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
			}
		}
	}

	processResources {
		dependsOn "copyWebApp"
	}

	task copyWebApp(type: Copy) {
		dependsOn "buildReact"
		from "$webappDir/build"
		into "$projectDir/src/main/resources/static"
	}


	task buildReact(type: Exec) {
		dependsOn "installReact"
		workingDir "$webappDir"
		inputs.dir "$webappDir"
		group = BasePlugin.BUILD_GROUP
		if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
			commandLine "npm.cmd", "run-script", "build"
		} else {
			commandLine "npm", "run-script", "build"
		}
	}

	task installReact(type: Exec) {
		workingDir "$webappDir"
		inputs.dir "$webappDir"
		group = BasePlugin.BUILD_GROUP
		if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
			commandLine "npm.cmd", "audit", "fix"
			commandLine 'npm.cmd', 'install'
		} else {
			commandLine "npm", "audit", "fix"
			commandLine 'npm', 'install'
		}
	}
}